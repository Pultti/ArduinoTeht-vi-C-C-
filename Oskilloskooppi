//Oskilloskooppi

void alustaTimer(void);
void tulostaNaytteet(void);

#define SAMPLETABLESIZE 200
int sampleTable[SAMPLETABLESIZE] = { 0 };
int indeksi = 0;
boolean naytteetOtettu = false;


void setup() 
{

  Serial.begin(2400);  //baudinopeus 2400, jotta ehditään ottamaan riittavasti
                       //naytteita signaalista, kun naytetaajuus = 10 000 Hz
  alustaTimer();
}

ISR(TIMER1_COMPA_vect) {
  if (!naytteetOtettu)
  {

    sampleTable[indeksi] = analogRead(A0);
    indeksi++;
    if (indeksi > SAMPLETABLESIZE) {  //Otetaan 200 näytettä, jotka tallentuvat globaaliin muuttujaan
      naytteetOtettu = true;
      indeksi = 0;  //Tämä tehdään, että taulukko tulostetaan ennen kuin uusi näytteenotto alkaa
      noInterrupts(); //Tällä varmistetaan taulukon tulostus
     delay(500);
    }
  }
 }


void loop() {

  tulostaNaytteet(); 
                   
  delay(200);  // Tämä siksi, että tulosta on helpompi seurata serial plotterilta.
}

void alustaTimer(void) {
  noInterrupts();  // Disabloidaan keskeytykset alustuksen ajaksi

  TCCR1A = 0;  //Alustetaan nämä kaksi keskeistä kontrollirekisteriä
  TCCR1B = 0;  // ensin nollaksi

  TCCR1B |= (1 << WGM12);  // Tämä bitti päälle ja timer on CTC moodissa
  // Eli tarkoittaa sitä, että timer
  // juoksee OCR1A rekisterin lukemaan asti
  // ja pyörähtää sitten nollaan, josta laskenta jatkuu

  TCCR1B |= (0 << CS10);  //Näillä kahdella bitillä B-rekisterissä
  TCCR1B |= (1 << CS11);  //Näillä kahdella bitillä B-rekisterissä
  TCCR1B |= (0 << CS12);  //asetetaan kellon jako 8:lla


  OCR1A = 200;          // timeri käy tahdilla 2000 000 tiksua/s ja keskeytystahdiksi halutaan 10000 keskeytystä/sekuntti

  TIMSK1 |= (1 << OCIE1A);  //Timer HW:sta enabloidaan Output Compare Interrupt Enable

  interrupts();  //Sallitaan keskeytykset alustuksen päätyttyä
}

void tulostaNaytteet(void) {
  if (naytteetOtettu == true) {
    for (indeksi = 0; indeksi < SAMPLETABLESIZE; indeksi++) {
      
      Serial.print(sampleTable[indeksi]);
      Serial.println(",");
    }

    delay(500);   //lisätään viive 500 ms, jonka aikana viimeinenkin merkki ehtii siirtyä.
    
    interrupts();

    naytteetOtettu = false;  

    Serial.print("K");
    // Tämän merkin jännite arvot yritetään siis nauhoittaa
    // koska nauhoituksen pitäisi olla nyt käynnissä
  }
}
